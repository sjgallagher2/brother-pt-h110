#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Dec 23 11:29:57 2024

@author: sam

Generate dot matrix display from hex
"""

import matplotlib as mpl
import matplotlib.pyplot as plt
import numpy as np

def hextobin(h):
    # https://stackoverflow.com/questions/1425493/convert-hex-to-binary/28913296#28913296
    binstr = bin(int(h, 16))[2:].zfill(len(h) * 4)
    binlist = list(binstr)
    binlist = [int(b) for b in binlist]
    binarr = np.array(binlist)
    return binarr

#mat = np.ones((16,128))
# %%
h
def plot_hex_with_os(h, ax, ncols=128,col_first=True):    
    harr = hextobin(h)
    hsz = len(harr)
    hcvec = np.reshape(harr,(hsz,1))  # convert to col vec
    # Column first
    if col_first:
        hmat = np.reshape(harr,(hsz//16,16)).T
    else:  # row first
        nrows = hsz // ncols 
        if hsz % ncols != 0:
            nrows += 1
        hpad = np.pad(harr,(0,nrows*ncols - hsz))
        hmat = np.reshape(hpad,(nrows,ncols))
    
    ax.imshow(hmat,vmin=0,vmax=1,cmap='gray')

#h2 = '0x8888888860E33A2F34B1436C92A1B22208'
#h

# %%
naxes = 2
fig,axs = plt.subplots(naxes,1,figsize=(14.25,8))
# plot_hex_with_os(h[:144*4], axs[0], ncols=144, col_first=False)
plot_hex_with_os(h[144*4+1:], axs[1], ncols=144, col_first=False)

# for os in range(naxes):
#     plot_hex_with_os(h, axs[os],ncols=os+base_cols,col_first=False)
    

fig.tight_layout()